//S -> {Declaracao | Comandos} EOF

//Declaracao -> (("char" | "string" | "int" | "float") Lista-de-ids [] ";" |
	"const" ID "=" Exp ";")
				
//Lista-de-ids -> ID [<- constante]{"," ID  [<- constante]}*	

//Comandos -> "{" Comando* "}" | Comando

//Comando -> [Atribuicao | Repeticao | Teste | Nulo | Leitura | Escrita] ";"





//Atribuicao -> ID ["["Exp"]"] "<-" Exp
//Repeticao -> while Exp Comandos
//Teste -> if Exp Comandos else Comandos
//Leitura -> readln"(" ID | Exp ")"
//Escrita -> (write|writeln) "("Exp {"," Exp}*")"


//Exp -> ExpS [(= | != | < | > | <= | >=) ExpS]
//ExpS -> [+|-] T {(+|-|"||") T}
//T -> F {(*|/|&&|div|mod) F}
//F -> ID["[" Exp "]"] | constante |nÃ£o F | P | "int" P | "float" P
//P -> "("Exp")"



 void S() {
      try {
         if (s != null) {
          
            do {
               checkEOF();
               D();
            } while (ehDeclaracao());
            
          
            
            do {
               checkEOF();
               C();
            } while (ehComando());

         }
      } catch (Exception e) {
         checkEOF();
         System.err.println(e.toString());
      }
   }